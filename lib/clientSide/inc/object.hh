// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.
#ifndef __object_hh__
#define __object_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_object
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_object
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_object
#endif






#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif



struct EntryIdl {
  typedef _CORBA_ConstrType_Variable_Var<EntryIdl> _var_type;

  
  ::CORBA::String_member first_name;

  ::CORBA::String_member last_name;

  ::CORBA::String_member father_name;

  ::CORBA::String_member phone;



  void operator>>= (cdrStream &) const;
  void operator<<= (cdrStream &);
};

typedef EntryIdl::_var_type EntryIdl_var;

typedef _CORBA_ConstrType_Variable_OUT_arg< EntryIdl,EntryIdl_var > EntryIdl_out;

typedef EntryIdl Entry_alias;
typedef EntryIdl_var Entry_alias_var;
typedef EntryIdl_out Entry_alias_out;

#ifndef __MyInterface__
#define __MyInterface__
class MyInterface;
class _objref_MyInterface;
class _impl_MyInterface;

typedef _objref_MyInterface* MyInterface_ptr;
typedef MyInterface_ptr MyInterfaceRef;

class MyInterface_Helper {
public:
  typedef MyInterface_ptr _ptr_type;

  static _ptr_type _nil();
  static _CORBA_Boolean is_nil(_ptr_type);
  static void release(_ptr_type);
  static void duplicate(_ptr_type);
  static void marshalObjRef(_ptr_type, cdrStream&);
  static _ptr_type unmarshalObjRef(cdrStream&);
};

typedef _CORBA_ObjRef_Var<_objref_MyInterface, MyInterface_Helper> MyInterface_var;
typedef _CORBA_ObjRef_OUT_arg<_objref_MyInterface,MyInterface_Helper > MyInterface_out;

#endif

// interface MyInterface
class MyInterface {
public:
  // Declarations for this interface type.
  typedef MyInterface_ptr _ptr_type;
  typedef MyInterface_var _var_type;

  static _ptr_type _duplicate(_ptr_type);
  static _ptr_type _narrow(::CORBA::Object_ptr);
  static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
  
  static _ptr_type _nil();

  static inline void _marshalObjRef(_ptr_type, cdrStream&);

  static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
    omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
    if (o)
      return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
    else
      return _nil();
  }

  static inline _ptr_type _fromObjRef(omniObjRef* o) {
    if (o)
      return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
    else
      return _nil();
  }

  static _core_attr const char* _PD_repoId;

  // Other IDL defined within this scope.
  struct Entries {
    typedef _CORBA_ConstrType_Variable_Var<Entries> _var_type;

    
    typedef _CORBA_Unbounded_Sequence< EntryIdl >  _m_entries_seq;
    _m_entries_seq m_entries;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef Entries::_var_type Entries_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< Entries,Entries_var > Entries_out;

  typedef Entries Entries_alias;
  typedef Entries_var Entries_alias_var;
  typedef Entries_out Entries_alias_out;


};

class _objref_MyInterface :
  public virtual ::CORBA::Object,
  public virtual omniObjRef
{
public:
  // IDL operations
  void load(::CORBA::Long action, ::MyInterface::Entries_out ent);
  void changeRequest(::CORBA::Long action, ::MyInterface::Entries& entr);

  // Constructors
  inline _objref_MyInterface()  { _PR_setobj(0); }  // nil
  _objref_MyInterface(omniIOR*, omniIdentity*);

protected:
  virtual ~_objref_MyInterface();

  
private:
  virtual void* _ptrToObjRef(const char*);

  _objref_MyInterface(const _objref_MyInterface&);
  _objref_MyInterface& operator = (const _objref_MyInterface&);
  // not implemented

  friend class MyInterface;
};

class _pof_MyInterface : public _OMNI_NS(proxyObjectFactory) {
public:
  inline _pof_MyInterface() : _OMNI_NS(proxyObjectFactory)(MyInterface::_PD_repoId) {}
  virtual ~_pof_MyInterface();

  virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
  virtual _CORBA_Boolean is_a(const char*) const;
};

class _impl_MyInterface :
  public virtual omniServant
{
public:
  virtual ~_impl_MyInterface();

  virtual void load(::CORBA::Long action, ::MyInterface::Entries_out ent) = 0;
  virtual void changeRequest(::CORBA::Long action, ::MyInterface::Entries& entr) = 0;
  
public:  // Really protected, workaround for xlC
  virtual _CORBA_Boolean _dispatch(omniCallHandle&);

private:
  virtual void* _ptrToInterface(const char*);
  virtual const char* _mostDerivedRepoId();
  
};




class POA_MyInterface :
  public virtual _impl_MyInterface,
  public virtual ::PortableServer::ServantBase
{
public:
  virtual ~POA_MyInterface();

  inline ::MyInterface_ptr _this() {
    return (::MyInterface_ptr) _do_this(::MyInterface::_PD_repoId);
  }
};







#undef _core_attr
#undef _dyn_attr



inline void
MyInterface::_marshalObjRef(::MyInterface_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}



#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_object
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_object
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_object
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_object
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_object
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_object
#endif

#endif  // __object_hh__

